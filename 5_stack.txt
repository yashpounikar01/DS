#include <stdio.h>
#include <stdlib.h>

#define MAX_SIZE 100

struct Stack {
    int items[MAX_SIZE];
    int top;
};

void initialize(struct Stack *stack)
{
    stack->top = -1;
}
int isEmpty(struct Stack *stack)
{
    return stack->top == -1;
}
int isFull(struct Stack *stack)
{
    return stack->top == MAX_SIZE - 1;
}

void push(struct Stack *stack, int value)
{
    if (!isFull(stack)) printf("Pushed %d onto the stack.\n", stack->items[++stack->top] = value);
    else printf("Stack overflow! Cannot push %d.\n", value);
}

int pop(struct Stack *stack)
{
    if (!isEmpty(stack)) return printf("Popped %d from the stack.\n", stack->items[stack->top--]), stack->items[stack->top + 1];
    else return printf("Stack underflow! Cannot pop from an empty stack.\n"), -1;
}

void displayStack(struct Stack *stack)
{
    printf("Stack: ");
    for (int i = 0; i <= stack->top; i++) printf("%d ", stack->items[i]);
    printf(isEmpty(stack) ? " (empty)\n" : "\n");
}

int main()
{
    struct Stack stack;
    initialize(&stack);
    int choice, value;

    while (1) {
        printf("\n1. Push 2. Pop 3. Display 4. Exit\nEnter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
        case 1:
            printf("Enter the value to push: ");
            scanf("%d", &value);
            push(&stack, value);
            break;
        case 2:
            pop(&stack);
            break;
        case 3:
            displayStack(&stack);
            break;
        case 4:
            printf("Exiting the program.\n");
            exit(0);
        default:
            printf("Invalid choice. Please try again.\n");
        }
    }

    return 0;
}