#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node *prev, *next;
};

struct Node *createNode(int value)
{
    struct Node *newNode = malloc(sizeof(struct Node));
    newNode->data = value;
    newNode->prev = newNode->next = NULL;
    return newNode;
}

struct Node *insert(struct Node *head, int value, int position)
{
    struct Node *newNode = createNode(value);

    if (!head) return newNode;

    if (position == 0) {
        struct Node *current = head;
        while (current->next) current = current->next;
        current->next = newNode;
        newNode->prev = current;
    } else if (position == 1) {
        newNode->next = head;
        if (head) head->prev = newNode;
        return newNode;
    } else {
        struct Node *current = head;
        for (int i = 1; i < position - 1 && current->next; ++i)
            current = current->next;
        newNode->next = current->next;
        if (current->next) current->next->prev = newNode;
        current->next = newNode;
        newNode->prev = current;
    }

    return head;
}

void displayList(struct Node *head)
{
    while (head) printf("%d <-> ", head->data), head = head->next;
    printf("NULL\n");
}

void freeList(struct Node *head)
{
    while (head) {
        struct Node *temp = head;
        head = head->next;
        free(temp);
    }
}

int main()
{
    struct Node *head = NULL;

    for (int i = 10; i <= 30; i += 10) head = insert(head, i, 0);

    printf("Doubly Linked List: ");
    displayList(head);

    int choice, value, position;
    do {
        printf("\n1. Insert at the beginning\n2. Insert at the end\n3. Insert at specific position\n0. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
        case 1:
            printf("Enter the value to insert at the beginning: ");
            scanf("%d", &value);
            position = 1;
            break;
        case 2:
            printf("Enter the value to insert at the end: ");
            scanf("%d", &value);
            position = 0;
            break;
        case 3:
            printf("Enter the value to insert: ");
            scanf("%d", &value);
            printf("Enter the position to insert at: ");
            scanf("%d", &position);
            break;
        case 0:
            break;
        default:
            printf("Invalid choice\n");
            continue;
        }

        head = insert(head, value, position);
        printf("Modified Doubly Linked List: ");
        displayList(head);

    } while (choice != 0);

    freeList(head);
    return 0;
}